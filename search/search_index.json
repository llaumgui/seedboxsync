{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SeedboxSync documentation","text":"<p>SeedboxSync provides a seamless and automated way to synchronize, download, and manage your torrents between your NAS and seedbox.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>\ud83d\udd04 Two-way synchronization:<ul> <li>Sync from NAS to Seedbox (upload blackhole folder)</li> <li>Sync from Seedbox to NAS (automatic download with de-duplication tracking)</li> </ul> </li> <li>\ud83d\udce5 Download management: Prevent duplicate transfers using an integrated SQLite database</li> <li>\ud83d\udcca Statistics and reporting: View monthly and yearly download statistics</li> <li>\u2705 Quality and testing: Over 80% unit test coverage</li> <li>\ud83c\udf10 Web frontend: A web front-end is also available as a separate project if you don't want to use the CLI for management and reporting.</li> </ul>"},{"location":"frontend/","title":"Frontend","text":"<p> SeedboxSync aims to be as simple as possible! That\u2019s why it was originally designed as a pure command-line utility.</p> <p>However, a dedicated frontend is also available to help you monitor and visualize what SeedboxSync is doing. This frontend is provided as a separate GitHub project and leverages SeedboxSync\u2019s database to extract information and generate useful statistics.</p> <p> Currently, the front-end does not implement any authentication method. You are responsible for handling authentication through a reverse proxy or another solution.</p> <p>Key Features:</p> <ul> <li>\ud83c\udf10 Dashboard interface: Monitor your downloads and syncs in real-time through a user-friendly web interface.</li> <li>\ud83d\udcca Visual statistics: Access detailed reports of your downloads, including monthly and yearly statistics.</li> <li>\ud83d\udee0\ufe0f Manage downloads: Remove downloads directly from the dashboard to allow re-downloading.</li> <li>\ud83d\udd04 Two-way sync overview: Quickly see the status of NAS-to-Seedbox and Seedbox-to-NAS synchronization.</li> <li>\u26a1 Auto-refresh: Automatically refresh data to keep your dashboard up-to-date without manual reloads.</li> <li>\ud83d\uddc4\ufe0f API access: Interact programmatically with your downloads and syncs using a REST API.</li> </ul> Main page Downloaded files Uploaded torrents info Statistics API"},{"location":"frontend/#installation","title":"Installation","text":""},{"location":"frontend/#using-docker","title":"Using docker","text":"<p> Recommended: Docker is the preferred installation method for stability and isolation.</p> <p>You must install SeedboxSync first and use docker-compose:</p> <pre><code>services:\n  seedboxsync:\n    container_name: seedboxsync\n    hostname: seedboxsync\n    image: ghcr.io/llaumgui/seedboxsync:latest\n    restart: unless-stopped\n    environment:\n      TZ: 'Europe/Paris'\n      PUID: 1000\n      PGID: 100\n    volumes:\n      - /data/seedboxsync/config:/config\n      - /data/seedboxsync/watch:/watch\n      - /data/seedboxsync/downloads:/downloads\n\n  seedboxsync-front:\n    container_name: seedboxsync-front\n    hostname: seedboxsync-front\n    image: ghcr.io/llaumgui/seedboxsync-front:latest\n    restart: unless-stopped\n    environment:\n      TZ: 'Europe/Paris'\n      PUID: 1000\n      PGID: 100\n      FLASK_SECRET_KEY: MySecretKey\n    volumes:\n      - /data/seedboxsync/config:/config\n      - /data/seedboxsync/downloads:/downloads\n    ports:\n      - 8000:8000\n</code></pre> <p>Once installed, you can access the frontend: http://127.0.0.1:8000.</p>"},{"location":"frontend/#docker-tags","title":"Docker tags","text":"Tags Description Stable <code>latest</code> Based on the latest release version \u2705 <code>main</code> Built from the <code>main</code> branch (development) \u274c"},{"location":"frontend/#environment-variables","title":"Environment Variables","text":"Variable Description Default Value <code>TZ</code> Timezone configuration <code>PUID</code> User ID for the main process <code>1000</code> <code>PGID</code> Group ID for the main process <code>1000</code> <code>FLASK_SECRET_KEY</code> The Flask's secret key that will be used for securely signing the session cookie and can be used for any other security related needs by extensions or your application. It should be a long random bytes or str. <code>dev</code> <code>GUNICORN_WORKERS</code> The number of Gunicorn worker processes. This number should generally be between 2-4 workers per core in the server. <code>1</code> <code>GUNICORN_BIND</code> Specify a server socket to bind. Server sockets can be any of <code>$(HOST)</code>, <code>$(HOST):$(PORT)</code>, <code>fd://$(FD)</code>, or <code>unix:$(PATH)</code>. An IP is a valid <code>$(HOST)</code>. <code>0.0.0.0:8000</code>"},{"location":"frontend/#using-pip","title":"Using pip","text":"<p>SeedboxSyncFront is available on PyPI.</p> <p> Warning: Docker is the recommended method.</p> <pre><code>pip install seedboxsync-front\nflask flask --app seedboxsync_front.app:main run\n</code></pre> <p>Once installed, you can access the frontend: http://127.0.0.1:5000.</p>"},{"location":"advanced/development-back/","title":"Development Backend","text":"<p>This section covers development for the SeedboxSync backend.</p>"},{"location":"advanced/development-back/#tech-stack","title":"Tech Stack","text":"<ul> <li>Python 3</li> <li>Cement for CLI framework</li> <li>Peewee ORM</li> </ul>"},{"location":"advanced/development-back/#installation","title":"Installation","text":"<p>Create a Python virtual environment and install dependencies:</p> <pre><code>make virtualenv\nsource env/bin/activate\n</code></pre>"},{"location":"advanced/development-back/#development-workflow","title":"Development Workflow","text":"<p>The project includes several helpers in the <code>Makefile</code> to streamline common development tasks (e.g., running the app, linting, testing).</p>"},{"location":"advanced/development-front/","title":"Development frontend","text":"<p>SeedboxSync also includes a frontend called SeedboxSync Front, available on GitHub.</p>"},{"location":"advanced/development-front/#tech-stack","title":"Tech Stack","text":"<ul> <li>Python 3</li> <li>Flask / Flask-Caching / Flask-Babel / Flask-RESTX</li> <li>Peewee ORM</li> </ul>"},{"location":"advanced/development-front/#frontend-development","title":"Frontend Development","text":"<p>The frontend is built with Bulma, Alpine.js and Vite:</p> <pre><code>npm i\nnpm run build\n</code></pre>"},{"location":"advanced/development-front/#python-development-frontend-integration","title":"Python Development (Frontend Integration)","text":"<p>If you are working on the frontend within the Python project:</p> <pre><code>make virtualenv\n. .venv/bin/activate\nmake run\n</code></pre>"},{"location":"advanced/development-front/#development-workflow","title":"Development Workflow","text":"<p>The project includes several helpers in the <code>Makefile</code> to streamline common development tasks (e.g., running the app, linting, testing).</p>"},{"location":"getting-started/configuration/","title":"Configuration","text":""},{"location":"getting-started/configuration/#configuration-file","title":"Configuration file","text":""},{"location":"getting-started/configuration/#docker-way","title":"Docker way","text":"<p> Recommended: This is the recommended way.</p> <p>The configuration file should be placed in <code>/conf</code>.</p>"},{"location":"getting-started/configuration/#other-ways","title":"Other ways","text":"<p> Warning: Docker is the recommended method.</p> <p>You can use the example configuration file. This example file can be located in:</p> <ul> <li><code>/usr/local/config/</code> (pip install)</li> <li><code>~/.local/config/</code> (pip install with user privileges)</li> </ul> <p>To create your configuration directory and copy the example file:</p> <pre><code>mkdir -p ~/.config/seedboxsync\ncp ~/.local/config/seedboxsync.yml.example ~/.config/seedboxsync/seedboxsync.yml\n</code></pre> <p>Or for a global configuration:</p> <pre><code>sudo mkdir -p /etc/seedboxsync\nsudo cp /usr/local/config/seedboxsync.yml.example /etc/seedboxsync/seedboxsync.yml\n</code></pre> <p>Supported configuration file locations:</p> <ul> <li><code>/etc/seedboxsync/seedboxsync.yml</code></li> <li><code>~/.config/seedboxsync/seedboxsync.yml</code></li> <li><code>~/.seedboxsync/config/seedboxsync.yml</code></li> <li><code>~/.seedboxsync.yml</code></li> </ul>"},{"location":"getting-started/configuration/#settings","title":"Settings","text":""},{"location":"getting-started/configuration/#seedbox-and-bittorrent-client-configuration","title":"Seedbox and BitTorrent client configuration","text":"<p>First, set the connection information for your seedbox. Currently, only SFTP is supported.</p> <pre><code>#\n# Information about your seedbox\n#\nseedbox:\n\n  ### Connection information\n  host: my-seedbox.ltd\n  port: 22\n  login: me\n  password: p4sw0rd\n  timeout: false\n\n  ### Only 'sftp' is supported for now\n  protocol: sftp\n\n  ### Chmod torrent after upload (set to false to disable)\n  ### Use octal notation, e.g. 0o644\n  chmod: false\n\n  ### Use a temporary directory for incomplete transfers (must be created manually)\n  tmp_path: /tmp\n\n  ### Your BitTorrent client's \"watch\" folder (must be created manually)\n  watch_path: /watch\n\n  ### The folder where your BitTorrent client puts finished files\n  finished_path: /files\n\n  ### Remove a prefix from the synced path (usually the same as \"finished_path\")\n  prefixed_path: /files\n\n  ### Exclude files with this suffix (e.g. incomplete downloads)\n  part_suffix: .part\n\n  ### Exclude files from sync using a regular expression (Python re syntax)\n  ### Example: .*missing$|^\\..*\\.sw\n  exclude_syncing: .*missing$|^\\..*\\.sw\n</code></pre> <p>Notes:</p> <ul> <li>To avoid permission issues between your transfer account and your BitTorrent client account, SeedboxSync can chmod the torrent file after upload.</li> <li>To prevent your BitTorrent client from watching (and using) an incomplete torrent file, SeedboxSync first transfers the torrent file to a temporary directory (<code>tmp_path</code>). Once the transfer and chmod are complete, the file is moved to the watch folder.   The temporary folder must also be configured in your BitTorrent client for unfinished torrents.</li> </ul> <p></p> <ul> <li>The <code>watch_path</code> is your BitTorrent client's \"blackhole\" or \"watch\" folder, used for blackhole synchronization.</li> <li>The <code>finished_path</code> is the folder where your BitTorrent client moves completed downloads. You can configure your client to use a specific folder for finished files.</li> </ul> <p></p>"},{"location":"getting-started/configuration/#nas-local-configuration","title":"NAS / Local configuration","text":"<p>Your NAS configuration is defined in the <code>local</code> section:</p> <pre><code>#\n# Information about the local environment (NAS, etc.)\n#\nlocal:\n\n  ### Your local \"watch\" folder\n  watch_path: ~/watch\n\n  ### Path where files are downloaded\n  download_path: ~/Downloads/\n\n  ### Path to the local SQLite database for tracking downloaded files\n  db_file: ~/.config/seedboxsync/seedboxsync.db\n</code></pre>"},{"location":"getting-started/configuration/#ping-service-configuration","title":"Ping service configuration","text":"<p>The ping service is triggered by the <code>--ping</code> argument. Currently, only Healthchecks is supported.</p>"},{"location":"getting-started/configuration/#healthchecks","title":"Healthchecks","text":"<p>Add a Healthchecks configuration for each sync command:</p> <pre><code>#\n# Healthchecks ping service\n#\nhealthchecks:\n\n  ### Sync seedbox part\n  sync_seedbox:\n    ### Enable or disable the service\n    enabled: true\n\n    # Ping URL\n    ping_url: https://hc-ping.com/ca5e1159-9acf-410c-9202-f76a7bb856e0\n\n  ### Sync blackhole part\n  sync_blackhole:\n    ## Enable or disable the service\n    enabled: true\n\n    ## Ping URL\n    ping_url: https://hc-ping.com/ca5e1159-9acf-410c-9202-f76a7bb856e0\n</code></pre>"},{"location":"getting-started/docker/","title":"Docker","text":"<p> Docker is the recommended installation method. This image includes s6-overlay and provides extra features.</p>"},{"location":"getting-started/docker/#installation","title":"Installation","text":""},{"location":"getting-started/docker/#running-with-docker-cli","title":"Running with Docker CLI","text":"<p>To run the container using the Docker CLI:</p> <pre><code>docker run -d \\\n  --name seedboxsync \\\n  --volume /data/seedboxsync/config:/config \\\n  --volume /data/seedboxsync/watch:/watch \\\n  --volume /data/seedboxsync/downloads:/downloads \\\n  -e TZ=Europe/Paris \\\n  -e PUID=1000 \\\n  -e PGID=100 \\\n  ghcr.io/llaumgui/seedboxsync:latest\n</code></pre>"},{"location":"getting-started/docker/#running-with-docker-compose","title":"Running with Docker Compose","text":"<pre><code>services:\n  seedboxsync:\n    container_name: seedboxsync\n    hostname: seedboxsync\n    image: ghcr.io/llaumgui/seedboxsync:latest\n    restart: unless-stopped\n    environment:\n      TZ: 'Europe/Paris'\n      PUID: 1000\n      PGID: 100\n    volumes:\n      - /data/seedboxsync/config:/config\n      - /data/seedboxsync/watch:/watch\n      - /data/seedboxsync/downloads:/downloads\n</code></pre>"},{"location":"getting-started/docker/#docker-tags","title":"Docker tags","text":"Tags Description Stable <code>latest</code> Based on the latest release version \u2705 <code>main</code> Built from the <code>main</code> branch (development) \u274c"},{"location":"getting-started/docker/#extra-features","title":"Extra Features","text":""},{"location":"getting-started/docker/#s6-overlay-integration","title":"s6-overlay Integration","text":"<p>This image uses s6-overlay for:</p> <ul> <li>Multi-process container management and customization.</li> <li>Support for changing the UID/GID running the main process.</li> </ul>"},{"location":"getting-started/docker/#cron-jobs","title":"Cron Jobs","text":"<ul> <li>Sync blackhole every minute.</li> <li>Sync seedbox every 15 minutes.</li> </ul>"},{"location":"getting-started/docker/#customization","title":"Customization","text":""},{"location":"getting-started/docker/#custom-uidgid","title":"Custom UID/GID","text":"<p>You can use <code>PUID</code> / <code>PGID</code> environment variables to run SeedboxSync as a specific non-root user instead of the default UID 1000. Just set the environment variables as follows:</p> <pre><code>environment:\n  PUID: 1000\n  PGID: 100\n</code></pre>"},{"location":"getting-started/docker/#environment-variables","title":"Environment Variables","text":"Variable Description Default Value <code>TZ</code> Timezone configuration <code>PUID</code> User ID for the main process <code>1000</code> <code>PGID</code> Group ID for the main process <code>1000</code>"},{"location":"getting-started/docker/#using-the-command-line-from-the-docker-host","title":"Using the Command Line from the Docker Host","text":"<p>You can use a script to easily run SeedboxSync commands inside the container:</p> <pre><code>#!/bin/bash\n\nCONTAINER_NAME=\"seedboxsync\"\nUUID=1000\nCOMMAND=\"$@\"\n\ndocker exec -it -u ${UUID} ${CONTAINER_NAME} seedboxsync ${COMMAND}\n</code></pre> <p>Tip: Replace <code>UUID</code> with the user ID you want to use inside the container.</p>"},{"location":"getting-started/install/","title":"Installation","text":""},{"location":"getting-started/install/#using-docker","title":"Using docker","text":"<p> Recommended: Docker is the preferred installation method for stability and isolation.</p> <p>See documentation.</p>"},{"location":"getting-started/install/#using-pip","title":"Using pip","text":"<p>SeedboxSync is available on PyPI.</p> <p> Warning: Docker is the recommended method.</p> <pre><code>pip install seedboxsync\n</code></pre>"},{"location":"getting-started/usage/","title":"Usage","text":""},{"location":"getting-started/usage/#use-in-command-line","title":"Use in command line","text":"<pre><code>usage: seedboxsync [-h] [-d] [-q] [-v] {sync,list,clean} ...\n\nScript for sync operations between your NAS and your seedbox\n\noptions:\n  -h, --help         show this help message and exit\n  -d, --debug        full application debug mode\n  -q, --quiet        suppress all console output\n  -v, --version      show program's version number and exit\n\nsub-commands:\n  {sync,list,clean}\n    sync             all synchronization operations\n    list             all list operations\n    clean            all cleaning operations\n\nUsage: seedboxsync sync blackhole --dry-run\n</code></pre> <ul> <li>Sync blackhole:</li> </ul> <pre><code>seedboxsync sync blackhole\n</code></pre> <ul> <li>Sync seedbox:</li> </ul> <pre><code>seedboxsync sync seedbox\n</code></pre> <ul> <li>List 20 last torrents downloaded from seedbox:</li> </ul> <pre><code>seedboxsync search downloaded -n 20\n</code></pre> <ul> <li>List 20 last torrents uploaded to seedbox:</li> </ul> <pre><code>seedboxsync search uploaded -n 20\n</code></pre> <ul> <li>List download in progress:</li> </ul> <pre><code>seedboxsync search progress\n</code></pre> <ul> <li>Clean all download in progress:</li> </ul> <pre><code>seedboxsync clean progress\n</code></pre> <ul> <li>Remove downloaded torrent with id 123 (to enable re-download):</li> </ul> <pre><code>seedboxsync clean downloaded 123\n</code></pre> <ul> <li>Get statistics by month:</li> </ul> <pre><code>seedboxsync stats by-month\n</code></pre> <ul> <li>Get statistics by year:</li> </ul> <pre><code>seedboxsync stats by-year\n</code></pre>"},{"location":"getting-started/usage/#use-in-crontab","title":"Use in crontab","text":"<p> Warning: Docker is the recommended method and have a cron feature out-of-the-box.</p> <pre><code># Sync blackhole every 2mn\n*/2 * * * * root seedboxsync -q sync blackhole --ping\n\n# Download torrents finished every 15mn\n*/15 * * * * root seedboxsync -q sync seedbox --ping\n</code></pre>"}]}